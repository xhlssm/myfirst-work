// fix-project-setup.js
const fs = require('fs');
const path = require('path');

const root = process.cwd();

function updateTsconfig() {
  const tsconfigPath = path.join(root, 'tsconfig.json');
  let tsconfig = {};
  if (fs.existsSync(tsconfigPath)) {
    try {
      tsconfig = JSON.parse(fs.readFileSync(tsconfigPath, 'utf-8'));
    } catch {
      console.error('tsconfig.json 读取失败，请检查格式');
      process.exit(1);
    }
  }
  tsconfig.compilerOptions = tsconfig.compilerOptions || {};
  tsconfig.compilerOptions.baseUrl = ".";
  tsconfig.compilerOptions.paths = tsconfig.compilerOptions.paths || {};
  tsconfig.compilerOptions.paths['@/*'] = ['*'];

  fs.writeFileSync(tsconfigPath, JSON.stringify(tsconfig, null, 2));
  console.log('tsconfig.json 已更新');
}

function writeNextConfig() {
  const nextConfigPath = path.join(root, 'next.config.js');
  const content = `const path = require('path');

const nextConfig = {
  webpack(config) {
    config.resolve.alias['@'] = path.resolve(__dirname);
    return config;
  },
};

module.exports = nextConfig;
`;
  fs.writeFileSync(nextConfigPath, content);
  console.log('next.config.js 已写入');
}

function createComponents() {
  const componentsDir = path.join(root, 'components');
  if (!fs.existsSync(componentsDir)) fs.mkdirSync(componentsDir);
  const files = {
    'Header.tsx': `export default function Header() {
  return <header><h1>Header 组件</h1></header>;
}
`,
    'Leaderboard.tsx': `export default function Leaderboard() {
  return <section><h2>Leaderboard 组件</h2></section>;
}
`,
    'Factions.tsx': `export default function Factions() {
  return <section><h2>Factions 组件</h2></section>;
}
`,
  };
  for (const [filename, content] of Object.entries(files)) {
    const filePath = path.join(componentsDir, filename);
    if (fs.existsSync(filePath)) {
      console.log(`${filename} 已存在，跳过`);
    } else {
      fs.writeFileSync(filePath, content);
      console.log(`${filename} 已创建`);
    }
  }
}

async function main() {
  updateTsconfig();
  writeNextConfig();
  createComponents();
  console.log('\n所有操作完成！请重启项目，清理 .next 缓存后重新构建。');
}

main();
